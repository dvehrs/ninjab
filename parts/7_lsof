
if [ ${load_part_lsof} ]; then
    [ ${startup_debug} ] && echo " loading" ||:
else 
    [ ${startup_debug} ] && echo " skipping" ||:
    return
fi

int_ninjab_available_parts="${int_ninjab_available_parts} 7_lsof"

# -----------------------------------------------------------------------------
# lsof functions
# -----------------------------------------------------------------------------
# A collection of functions to make calling lsof easy and to format the output
# for simple reading.
#
# Required binaries installed: lsof, awk, sed, grep
#
# Available functions:
# lsof_listeningall - lists all listening services
# lsof_listening    - lists listening services, grouped by count per service.
# lsof_estaball     - lists all established connections on each interface
# lsof_estab        - lists established connections, grouped by count per service.
# -----------------------------------------------------------------------------

function lsof_listeningall () {
    echo "All Listening Services on $HOSTNAME:"
    echo "+-----------------+-------------------+----------+-----------------+----------+----------+"
    echo "| Service         | Address:Port      | Protocol | User            | PID      | PPID     |" 
    echo "+-----------------+-------------------+----------+-----------------+----------+----------+"
    sudo lsof +c 0 -i -n -P -R -S2 -Ts -w | grep LISTEN | sed -e "s/\*://" -e "s/localhost.localdomain://" \
        | awk "{ printf \"| %-15s | %-17s |   %-5s  | %-15s | %-8s | %-8s |\n\",\$1,\$10,\$9,\$4,\$2,\$3 }" \
        | sort | uniq
    echo "+-----------------+-------------------+----------+-----------------+----------+----------+"
}

function lsof_listening () {
    echo "Listening Services Summary on $HOSTNAME:"
    echo "+-------+-----------------+-------------------+----------+"
    echo "| Count | Service         | Address:Port      | Protocol |" 
    echo "+-------+-----------------+-------------------+----------+"
    sudo lsof +c 0 -i -n -P -R -S2 -Ts -w | grep LISTEN  \
        | awk "{ printf \"| %-15s | %-14s |   %-5s  |\n\",\$1,\$10,\$9 }" \
        | sort | uniq -c | awk "{ printf \"| %-5s | %-15s | %-17s |   %-5s  |\n\",\$1,\$3,\$5,\$7 }"
    echo "+-------+-----------------+-------------------+----------+"
}

function lsof_estaball () {
    for interface in  $(ip addr show up | grep inet[^6] | awk '{print $2}' | sed -e 's/\/[0-9]\+//') 
        do 
            echo -e "All Established Connections on $HOSTNAME on $interface:"
            echo -e "+----------------------------------------------------+-----------------+-------+----------------+----------+----------+"
            echo -e "| Connection (Local -> Remote)                       | Service         | Proto |           User | PID      | PPID     |" 
            echo -e "+----------------------------------------------------+-----------------+-------+----------------+----------+----------+"
            sudo lsof +c 0 -i -n -R -S2 -Ts -w | grep ESTAB | grep $interface:  \
                | awk "{ printf \"| %50s | %-15s |  %-4s | %14s | %8s | %8s |\n\",\$10,\$1,\$9,\$4,\$2,\$3 }" \
                | sort +1 -2  | sort +2 -3
            echo -e "+----------------------------------------------------+-----------------+-------+----------------+----------+----------+"
            echo
        done
}

function lsof_estab () {
    echo    "Established Connection Summary for $HOSTNAME:"
    echo -e "+-------+-----------------+-------+----------------+----------+----------+"
    echo -e "| Count | Service         | Proto |           User | PID      | PPID     |" 
    echo -e "+-------+-----------------+-------+----------------+----------+----------+"
    sudo lsof +c 0 -i -n -R -S2 -Ts -w | grep ESTAB | sed -e "s/\*://"\
        | awk "{ printf \"| %-15s | %-4s |  %14s | %8s | %8s |\n\",\$1,\$9,\$4,\$2,\$3 }" \
        | sort | uniq -c | awk "{ printf \"| %-5s | %-15s |  %-4s | %14s | %8s | %8s |\n\",\$1,\$3,\$5,\$7,\$9,\$11 }" 
    echo -e "+-------+-----------------+-------+----------------+----------+----------+"
}


