[ -z ${load_part_stateinfo} ] && return

COLOR_WHITE='\033[1;37m'
COLOR_LIGHTGRAY='033[0;37m'
COLOR_GRAY='\033[1;30m'
COLOR_BLACK='\033[0;30m'
COLOR_RED='\033[0;31m'
COLOR_LIGHTRED='\033[1;31m'
COLOR_GREEN='\033[0;32m'
COLOR_LIGHTGREEN='\033[1;32m'
COLOR_BROWN='\033[0;33m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
COLOR_LIGHTBLUE='\033[1;34m'
COLOR_PURPLE='\033[0;35m'
COLOR_PINK='\033[1;35m'
COLOR_CYAN='\033[0;36m'
COLOR_LIGHTCYAN='\033[1;36m'
NC='\033[0m'

# echo -e "${COLOR_YELLOW} ** This text is yellow example ** ${NC}"

function _b_trim() {
    while read s; do
	echo "${s}" | sed 's/^ *//g'
    done
}

function filler() {
    char=${1:-'*'}
    count=${2:-$((${COLUMNS:-78}))}
    printf -vch  "%${count}s" ""
    printf "%s\n" "${ch// /${char}}"
}

function echoi() {
    headline="${1}: "
    char='*'

    len=${3:-$((${COLUMNS:-78}-1))}
    local IFS=$(echo -en "\n\b")

    if [ -z "${2}" ]; then
	printf "%-${len}s${char}%s\n" "* ${1}"
	return
    fi

    linecount=$(echo -e "$2" | wc -l | sed -e 's/[^0-9]//g')

    if [ ${#2} -ge $((${len}-${#headline})) -o ${linecount} -gt 1 ]; then
	str=$(echo "${2}" | fold -s -w $((${len}-12)) | sed -e 's/^/   /g')
	echoi "${headline}"
	for l in ${str}; do
	    echoi "  ${l}"
	done
    else
	printf "%-${len}s${char}%s" "* ${headline}${2}"
    fi
}

function gitInfo() {
    if ! which git &> /dev/null; then
	return # Git not available
    fi
    git status &> /dev/null
    sc=$?
    if [ ${sc} != 0 ]; then
	return # No git repo here..
    fi

    echoi
    echoi "GIT"
    echoi "  Git status" "$(git status -s)"
}

function svnInfo() {
    if ! which svn &> /dev/null; then
	return # Svn not available
    fi
    svn info &> /dev/null
    sc=$?
    if [ ${sc} != 0 ]; then
	return # No svn repo here..
    fi

    echoi
    echoi "SVN"
    echoi "  Svn info" "$(svn info)"
    echoi
    echoi "  Svn  status" "$(svn status)"
}

function getFullPath() {
    curr_dir=$(pwd)
    if [[ $1 == /* ]]; then
	dir=$(dirname $1)
    else
	dir="${curr_dir}/$(dirname $1)"
    fi

    fname=$(basename $1)
    cd $dir
    full_path="$(pwd)/$fname"
    cd $curr_dir
    echo $full_path
}

function stateinfo_directory() {
    local folderpath=$(getFullPath "${1}")
    echoi "Info about directory ${folderpath}"
    cd "${folderpath}" &> /dev/null
    if [ $? != 0 ]; then
	echoi " --- Unable to access that directory ---"
	return
    fi
    gitInfo
    svnInfo
    cd - &> /dev/null
}

function stateinfo_file() {
    local filepath=$(getFullPath "${1}")
    #local filename=$(basepath "${filepath}")
    echoi "Info about file ${filepath}"
    echoi "Guessed filetype" "$(file ${filepath} | tr -d "${filepath}:" | _b_trim)"
}

function stateinfo_general() {
    local username=$(whoami)
    local netstat_tcp=$(netstat -n -p tcp)

    echoi "Current user (${username}):"
    echoi "  Your IDs" "$(id)"
    echoi "  You own" "$(($(ps u -U ${username} | wc -l) - 1)) / $(($(ps ax | wc -l) - 1)) processes"
    echoi
    echoi "System info:"
    echoi "  Uptime" "$(uptime)"
    echoi "  Current runlevel" "$(who -r | sed -n 's/.*run-level \([0-9]\)/\1/p')"
    echoi "  Current logged in users" "$(users)"
    echoi
    echoi "Network info:"
    echoi "  IPv4 adresses" "$(/sbin/ifconfig 2> /dev/null | awk '/inet / {print $2}'  | sed -e :a -e '$!N;s/\n/, /;ta' -e 's/[^0-9\., ]//g')"
    echoi "  LISTEN connections" "$(echo -e ${netstat_tcp} | grep -o LISTEN | wc -l | sed 's/[^0-9]//g')"
    echoi "  ESTABLISHED connections" "$(echo -e ${netstat_tcp} | grep -o ESTABLISHED | wc -l | sed 's/[^0-9]//g')"
    echoi "  TIME_WAIT connections" "$(echo -e ${netstat_tcp} | grep -o TIME_WAIT | wc -l | sed 's/[^0-9]//g')"
    echoi "  CLOSE_WAIT connections" "$(echo -e ${netstat_tcp} | grep -o CLOSE_WAIT | wc -l | sed 's/[^0-9]//g')"
    echoi
    echoi "Current directory:"
    echoi "  Full path" "$(pwd)"
    echoi "  Current directory" "$(ls -ld .)"
    echoi "  Directory count" "$(($(find . -maxdepth 1 -type d | wc -l)-1))"
    echoi "  .directory count" "$(find . -maxdepth 1 -type d -name '.*' | wc -l | sed 's/[^0-9]//g')"
    echoi "  File count" "$(find . -maxdepth 1 -type f | wc -l | sed 's/[^0-9]//g')"
    echoi "  .file count" "$(find . -maxdepth 1 -type f -name '.*' | wc -l | sed 's/[^0-9]//g')"
    gitInfo
    svnInfo
}

function stateinfo() {
    filler
    if [ -z ${1} ]; then
	stateinfo_general
    else
	if test -d "${1}"; then
	    stateinfo_directory "${1}"
	elif test -f "${1}"; then
	    stateinfo_file "${1}"
	else
	    echoi "${1} does not exists or is not a normal directory or file."
	fi
    fi
    filler
}

if [ ! -z ${load_part_stateinfo_alias} ]; then
    a="alias ${load_part_stateinfo_alias}='stateinfo'"
    eval $a
    unset a
fi
